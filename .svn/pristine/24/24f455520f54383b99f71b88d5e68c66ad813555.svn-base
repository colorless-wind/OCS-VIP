<style lang="less" scoped>
    @import "../../assets/less/config";
    
    #personalCenterPage .main-box {
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        height: 100%;
        align-items: center;
    }

    #personalCenterPage .main-box .avatar-box {
        width: 100%;
        text-align: center;
    }

    #personalCenterPage .main-box .avatar-box img {
        width: 60px;
        height: 60px;
        border-radius: 50%;
    }

    #personalCenterPage .main-box .avatar-box .user-name {}

    #personalCenterPage .main-box .cells-box {
        width: 100%;
        flex-basis: 55%;
    }

    #personalCenterPage .main-box .btn-box {
        width: 100%;
        text-align: center;
    }

    #personalCenterPage .btn-box .btn {
        width: 50%;
        line-height: 38px;
        border-radius: 5px;
        border: none;
        font-size: 14px;
        color: #fff;
        background: #62a8ea;
    }

</style>
<style>
    #personalCenterPage .main-box .cells-box .vux-label {
        font-size: 14px;
    }

    #personalCenterPage .main-box .cells-box .extra-left-icon {
        display: flex;
        flex-direction: column;
    }

    #personalCenterPage .main-box .cells-box .extra-left-icon img {
        width: 19px;
        margin-right: 10px;
        margin-top: 4px;
    }

</style>
<template>
<div>
    <v-header title=""></v-header>
    <v-content id="personalCenterPage">
    <div class="main-box">
        <!--* 头像、用户名 *-->
        <div class="avatar-box">
            <img src="../../assets/images/index/avatar.png" />
            <p class="user-name">{{userInfo.name}}</p>
        </div>
        <!--* 菜单条目 *-->
        <div class="cells-box">
            <group>
                <cell title="交易明细" link="/transaction/list/">
                    <div slot="icon" class="extra-left-icon"><img src="../../assets/images/icon/transaction.png" /></div>
                </cell>
                <cell title="个人信息" link="/personal/personalinfo/">
                    <div slot="icon" class="extra-left-icon"><img src="../../assets/images/icon/user_info.png" /></div>

                </cell>
<!--
                <cell title="设置" link="/personal/setting/">
                    <div slot="icon" class="extra-left-icon"><img src="../../assets/images/icon/setting.png" /></div>
                </cell>
-->
            </group>
        </div>
<!--
        <div class="btn-box">
            <button class="btn" type="button" @click="exitLogin">退出登录</button>
        </div>
-->
    </div>
    </v-content>
    <!--* 加载动画 load true/false 显示/隐藏；type 1-7 7种样式 *-->
    <v-loading :type="1" :load="loading" :msg="loadingMsg"></v-loading>
</div>
</template>
<script>
    //* 引用工具函数包并以混入的形式加载
    import util from '../../assets/js/util'
    //* 引用vux组件
    import {
        Cell,
        Group,
    } from 'vux'

    export default {
        components: {
            Cell,
            Group,
        },
        data() {
            return {
                //* 用户信息（头像、姓名等）
                userInfo:{
                    avatar:'',
                    name:localStorage.getItem('username') || 'not login'
                },
                //* 是否启用加载动画
                enableLoading:true,
                //* 加载动画显示状态
                loading: false,
                //* 加载动画提示文字
                loadingMsg: '',
            }
        },
        mounted() {
            
        },
        methods: {
            /**
             * 功能 退出登录（暂不使用）
             * 参数 无
             * 返回 无
             **/
            exitLogin() {
                //* 设定加载提示信息
                this.loadingMsg = this.CONST.MSG.commonLoading;
                //* 发送请求
                this.post(this.CONST.BASE_URL, this.getSendData({
                    userId: localStorage.getItem('id') || 'not login',
                    permissionId: localStorage.getItem('token') || 'not login',
                    userName: localStorage.getItem('username') || 'not login',
                    merchantId: sessionStorage.getItem('merchantId') || 'no merchantId',
                    merchantName: sessionStorage.getItem('merchantName') || 'no merchantName',
                }, this.CONST.APP_ID, this.CONST.METHOD.exitLogin, this.CONST.PWD), this).then((response) => {
                    console.log('访问成功');
                    console.log(response);
                    if (0 == response.subStatus && 0 == response.status) {
                        //* 清除缓存信息
                        localStorage.removeItem('id');
                        localStorage.removeItem('token');
                        localStorage.removeItem('tokenmd5');
                        localStorage.removeItem('username');
                        //* 退出登录返回登录页面
                        this.goLogin();
                    } else {
                        if (0 != response.status) {
                            this.toast(response.errorMsg);
                        }
                        if (0 != response.subStatus) {
                            this.toast(this.CONST.TRANSCODE[response.subStatus]);                             this.cleanToken(response.subStatus);
                        }
                    }
                }).catch((err) => {
                    console.warn(err);
                })
            },
            /**
             * 功能 跳转登录页面
             * 参数 无
             * 返回 无
             **/
            goLogin() {
                this.$router.push({
                    path: this.CONST.ROUTER.loginPage
                })
            },
        },
        mixins: [util]
    }

</script>
