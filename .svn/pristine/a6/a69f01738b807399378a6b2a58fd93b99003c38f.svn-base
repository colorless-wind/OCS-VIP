<style lang="less" scoped>
    @import "../../assets/less/config";
    #resetPage .content {
        bottom: 0
    }

    #resetPage .form {
        width: 80%;
        margin: 0 auto;
    }

    #resetPage .line {
        padding: 10px 0;
        text-align: center;
        position: relative;
    }

    #resetPage .icon {
        width: 20px;
        position: absolute;
        top: 18px;
        left: 10px;
    }

    @media (max-width:320px) {
        #resetPage .line {
            padding: 10px 0;
            text-align: center;
            position: relative;
        }
        #resetPage .icon {
            width: 20px;
            position: absolute;
            top: 18px;
            left: 10px;
        }
    }

    #resetPage .text {
        box-sizing: border-box;
        width: 100%;
        padding: 5px 45px;
        line-height: 28px;
        border-radius: 5px;
        border: 1px solid #ddd;
        font-size: 14px;
        background-color: aliceblue;
    }

    #resetPage .btn {
        width: 50%;
        line-height: 38px;
        border-radius: 5px;
        /*border: 1px solid darken(@main, 3%);*/
        border: none;
        font-size: 14px;
        color: #fff;
        background-color: #62a8ea;
    }

    #resetPage .banner {
        width: 100%;
        margin-bottom: 30px;
    }

    #resetPage .go-login {
        float: left;
        padding-left: 20px;
        color: #999;
    }

    #resetPage .verify-input {
        width: 50%;
    }

    #resetPage .verify-btn {
        width: 45%;
        /*background-color: lightgray;*/
        background-color: lightcoral;
        margin-left: 3%;
    }

</style>
<template>
	<div>
		<v-header title=""></v-header>
		<v-content id="resetPage">
            <div v-show="step == 1">
			<img src="../../assets/images/login/banner.jpg" class="banner" />
			<form class="form" @submit.prevent="submit">
				<div class="line">
					<img src="../../assets/images/login/phone.png" class="icon" />
					<input class="text" type="tel" placeholder="手机号" maxlength="11" v-model="form.username">
				</div>
				<!--<div class="line">
					<img src="../../assets/images/login/password.png" class="icon" />
					<input class="text" type="password" placeholder="密码" maxlength="20" v-model="form.password">
				</div>-->
				<div class="line" style="text-align: left;">
					<img src="../../assets/images/login/verify.png" class="icon" />
					<input class="text verify-input" type="tel" placeholder="验证码" maxlength="6" v-model="form.verifycode">
					<button type="button" class="btn verify-btn" @click="createVerifyCode" :disabled="vTimer != 60">{{vTimer == 60 ?'获取验证码':vTimer + ' s'}}</button>

				</div>
				<div class="line">
					<button class="btn" type="button" @click="checkUserInfo">下一步</button>
				</div>
				<div class="line">
					<span class="go-login">已有账号？<span style="color: lightcoral" @click="goLogin">去登录</span></span>
				</div>
			</form>
                </div>

            <div v-show="step == 2">
			<img src="../../assets/images/login/banner.jpg" class="banner" />
			<form class="form" @submit.prevent="submit">
				<div class="line">
					<img src="../../assets/images/login/password.png" class="icon" />
					<input class="text" type="password" placeholder="新密码" maxlength="20" v-model="form.password">
				</div>
				<div class="line">
					<img src="../../assets/images/login/password.png" class="icon" />
					<input class="text" type="password" placeholder="确认新密码" maxlength="20" v-model="form.confirmPassword">
				</div>
				<div class="line">
					<button class="btn" type="button" @click="checkPasswordInfo">完成</button>
				</div>
				<div class="line">
					<span class="go-login">已有账号？<span style="color: lightcoral" @click="goLogin">去登录</span></span>
				</div>
			</form>
                </div>
		</v-content>
        <!--* 加载动画 load true/false 显示/隐藏；type 1-7 7种样式 *-->
        <v-loading :type="1" :load="loading" :msg="loadingMsg"></v-loading>
	</div>
</template>
<script>
    
    //* 引用工具函数包并以混入的形式加载
    import util from '../../assets/js/util'
    //* 引用获取发送数据组件
    import {
        getSendData
    } from '../../assets/js/proto'

    export default {
        data() {
            return {
                //* 提交表单信息
                form: {
                    username: '',
                    password: '',
                    confirmPassword: '',
                    verifycode: ''
                },
                //* 验证码计时
                vTimer: 60,
                //* 加载动画显示状态
                loading: false,
                //* 加载动画提示文字
                loadingMsg: '',
                //* 
                step: 1
            }
        },
        methods: {
            /**
             * 功能 服务端校验验证码
             * 参数 无
             * 返回 无
             **/
            checkVerifyCode() {
                //* 设定加载提示信息
                this.loadingMsg = this.CONST.MSG.resetPwdStep1Loading;
                //* 发送请求
                this.post(this.CONST.BASE_URL, getSendData({
                    username: this.form.username,
                    smsCode: this.form.verifycode
                }, this.CONST.APP_ID, this.CONST.METHOD.checkVcode, this.CONST.PWD), this).then((response) => {
                    console.log('访问成功');
                    console.log(response);
                    if (0 == response.subStatus && 0 == response.status) {
                        //* 跳转至第二步
                        this.step = 2;
                    } else {
                        if (0 != response.status) {
                            this.toast("操作异常， 异常信息为：" + response.errorMsg);
                        }
                        if (0 != response.subStatus) {
                            this.toast("系统异常， 异常信息为：" + response.subErrorMsg);
                        }
                    }
                }).catch((err) => {
                    console.warn(err);
                    //* 跳转至第二步 *********tmp
                    this.step = 2;
                })
            },
            /**
             * 功能 重置密码
             * 参数 无
             * 返回 无
             **/
            resetPassword() {
                //* 设定加载提示信息
                this.loadingMsg = this.CONST.MSG.resetPwdStep2Loading;
                //* 发送请求
                this.post(this.CONST.BASE_URL, getSendData({
                    password: this.form.password,
                    password: this.form.password,
                }, this.CONST.APP_ID, this.CONST.METHOD.resetPwd, this.CONST.PWD), this).then((response) => {
                    console.log('访问成功');
                    console.log(response);
                    if (0 == response.subStatus && 0 == response.status) {
                        this.toast(this.CONST.MSG.resetPwdSuccess);
                        //* 跳转至登录页面
                        this.$router.push({
                            path: this.CONST.ROUTER.loginPage
                        })
                    } else {
                        if (0 != response.status) {
                            this.toast("操作异常， 异常信息为：" + response.errorMsg);
                        }
                        if (0 != response.subStatus) {
                            this.toast("系统异常， 异常信息为：" + response.subErrorMsg);
                        }
                    }
                }).catch((err) => {
                    console.warn(err);
                })
            },
            /**
             * 功能 验证码1分钟计时器
             * 参数 无
             * 返回 无
             **/
            verifyCodeTimer() {
                //* 获取全局Vue对象
                var global = this;
                var timerEvent = setInterval(function() {
                    global.vTimer--;
                    if (global.vTimer < 1) {
                        global.vTimer = 60;
                        clearInterval(timerEvent);
                    }
                }, 1000)
            },
            /**
             * 功能 获取验证码
             * 参数 无
             * 返回 无
             **/
            createVerifyCode() {
                //* 校验手机号
                if (!this.CONST.REGEX.phone.test(this.form.username)) {
                    this.toast(this.CONST.MSG.phoneCheck);
                    return false;
                }
                //* 设定加载提示信息
                this.loadingMsg = this.CONST.MSG.vcodeLoading;
                //* 发送请求
                this.post(this.CONST.BASE_URL, getSendData({
                    phone: this.form.username,
                    type: 0,
                }, this.CONST.APP_ID, this.CONST.METHOD.vcode, this.CONST.PWD), this).then((response) => {
                    console.log('访问成功');
                    console.log(response);
                    if (0 == response.subStatus && 0 == response.status) {
                        //* 开始计时，1分钟可再次获取验证码
                        this.verifyCodeTimer();
                    } else {
                        if (0 != response.status) {
                            this.toast("操作异常， 异常信息为：" + response.errorMsg);
                        }
                        if (0 != response.subStatus) {
                            this.toast("系统异常， 异常信息为：" + response.subErrorMsg);
                        }
                    }
                }).catch((err) => {
                    console.warn(err);
                })
            },
            /**
             * 功能 校验用户信息
             * 参数 无
             * 返回 无
             **/
            checkUserInfo() {
                //* 校验手机号
                if (!this.CONST.REGEX.phone.test(this.form.username)) {
                    this.toast(this.CONST.MSG.phoneCheck);
                    return false;
                }
                //* 校验验证码
                if (!this.CONST.REGEX.vcode.test(this.form.verifycode)) {
                    this.toast(this.CONST.MSG.vcodeCheck);
                    return false;
                }
                //* 发送校验验证码请求
                this.checkVerifyCode();
            },
            /**
             * 功能 校验用户信息
             * 参数 无
             * 返回 无
             **/
            checkPasswordInfo() {
                //* 校验新密码
                if (!this.CONST.REGEX.pwd.test(this.form.password)) {
                    this.toast(this.CONST.MSG.pwdCheck);
                    return false;
                }
                //* 校验确认新密码
                if (!this.CONST.REGEX.pwd.test(this.form.confirmPassword)) {
                    this.toast(this.CONST.MSG.pwdConfirmCheck);
                    return false;
                }
                //* 校验新密码与确认新密码是否一致
                if (this.form.confirmPassword !== this.form.password) {
                    this.toast(this.CONST.MSG.pwdConfirmSameCheck);
                    return false;
                }
                //* 发送重置密码请求
                this.resetPassword();
            },
            /**
             * 功能 跳转登录页面
             * 参数 无
             * 返回 无
             **/
            goLogin() {
                this.$router.push({
                    path: this.CONST.ROUTER.loginPage
                })
            }
        },
        mixins: [util]
    }

</script>
